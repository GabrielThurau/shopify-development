





<style>


.ac_CS {
  position:relative;
  overflow:visible;
  margin-top:20px;
}
.ac_CS > div > h3 {
  color: #1C1B1B;
  font-family: Open Sans Condensed;
  font-size: 21px;
  font-style: normal;
  font-weight: 600;
  line-height: 1;
  letter-spacing: 2.1px;
  text-transform: uppercase;
  margin-bottom:20px;
}
.ac_CSImages > ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display:flex;
  flex-direction:row;
  align-items: flex-start;
  gap:5%;
}
.ac_CSImages > ul > li {
  border: 2px solid #F1E7DD;
  padding-inline-start: 0;
  position:relative;
  flex: 0 0 21%;
}
.ac_CSImages > ul > li > img {
  width:100%;
}
.ac_CSImages > ul > li:before {
  content: "+";
  position: absolute;
  left: -21%;
  top: calc(50% - 7px);
  width: 13%;
  height: 10px;
  font-family: Open Sans Regular;
  font-size:3.5897435897435894vw;
  font-weight:700;
  line-height: .4;
}
.ac_CSImages > ul > li:first-child:before,
.ac_CSImages > ul > li:first-child.ac_CSDisable + li:before,
.ac_CSImages > ul > li:first-child.ac_CSDisable + li:nth-child(2).ac_CSDisable + li:before,
.ac_CSImages > ul > li:first-child.ac_CSDisable + li:nth-child(2).ac_CSDisable + li:nth-child(3).ac_CSDisable + li:before {
  /* display: none; */
}
.ac_CSPricing {
  margin:13px 0;
}
.ac_CSPricing > span {
  font-family: Open Sans Condensed;
  font-style: normal;
  line-height: 1;
}
.ac_CSPricing > span:first-child {
  color: #454545;
  font-size: 16px;
  font-weight: 400;
  line-height: 1;
}
.ac_CSPricing > span:nth-child(2) {
  color: #000;
  font-size: 20px;
  font-weight: 600;
  line-height: 1;
}
.ac_CSCTA {
  position:relative;
  margin-bottom:20px;
}
.ac_CSCTA > button {
  padding: 12px 55px;
  text-align:center;
  border-radius: 3px;
  background: #000;
  color: #FFF;
  font-family: Open Sans Condensed;
  font-size: 16px;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
}
.ac_CSProducts > ul {
  list-style: none;
  margin: 0;
  padding: 0;
  position:relative;
}
.ac_CSProducts > ul > li {
  position:relative;
  padding-inline-start: 0;
  margin-bottom:20px;
}
.ac_CSProduct input {
  display:none;
  margin-left: 0;
}
.ac_CSProduct .ac_CSChk {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  height: 16px;
  width: 16px;
  border-radius: 3px;
  color: #ffffff;
  background-color: #000000;
  border: 1px solid #000000;
  margin-left: 0px;
}
.ac_CSProduct .ac_CSChk:after {
  content: "";
  position: absolute;
  display: none;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border: 1px solid white;
}
.ac_CSProduct input[checked="true"] ~ .ac_CSChk:after {
  display: block;
  content: "\2713";
  position: absolute;
  top: -5px;
  left: 2px;
  border: none;
}
.ac_CSProductInfo {
  margin-left:26px;
  width: calc(100% - 26px);
  display:flex;
}
.ac_CSProductInfo > span {
  color: #000;
  font-size: 14px;
  font-style: normal;
  line-height: 1;
  text-transform: capitalize;
}
.ac_CSProductInfo > span:first-child {
  flex: 1 0 75%;
  font-family: Open Sans Condensed Medium;
  font-weight: 400;
}
.ac_CSMain {
  font-family: Open Sans Condensed;
}
.ac_CSProductInfo > span:last-child {
  flex: 1 0 25%;
  text-align:right;
  font-family: Mulish;
  font-family: Open Sans, sans-serif;
  font-weight: 600;
}
.ac_CSDisable {
  display:none;
}
@media screen and (min-width:425px){
  .ac_CSProduct input[checked="true"] ~ .ac_CSChk:after {
    top: -4px;
    left: 2px;
  }
}
@media screen and (min-width:500px){
  .ac_CSImages > ul > li:before {
    font-size:1.4000000000000001vw;
    left: -17%;
  }
  .ac_CSProduct input[checked="true"] ~ .ac_CSChk:after {
    top: -7px;
    left: 1px;
  }
}
@media screen and (min-width:1000px){
  .ac_CSImages > ul > li:before {
    left: -21%;
  }
}
@media screen and (min-width:1375px){
  .ac_CSImages > ul > li:before {
    font-size:14px;
  }
}

  
</style>

{% assign upsell_products = product.metafields.upsell %}

{% for product in upsell_products  %}

<p class="product-title">{{ product.title }}</p>

{% endfor %}

<div class="ac_CS">
  <div>
    <h3>COMPLETE THE LOOK</h3>
    <div class="ac_CSImages">
      <ul>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
      </ul>
    </div>
    <div class="ac_CSPricing">
      <span>Total Price:</span> <span></span> <!--span>$94.47</span> <span>(10% Off)</span-->
    </div>
    <div class="ac_CSCTA">
      <button>Add to Cart</button>
    </div>
    <div class="ac_CSProducts">
      <ul>
        <li>
          <label class="ac_CSProduct" for="ac_CSP1">
            <input type="checkbox" id="ac_CSP1" checked="true">
            <span class="ac_CSChk"></span>
            <span class="ac_CSProductInfo">
              <span><span class="ac_CSMain">This Item: </span><span class="ac_CSTitle">{{ product.title }}</span></span>
              <span><span></span></span>
            </span>
          </label>
        </li>
        <li>
          <label class="ac_CSProduct" for="ac_CSP2">
            <input type="checkbox" id="ac_CSP2" checked="true">
            <span class="ac_CSChk"></span>
            <span class="ac_CSProductInfo">
              <span class="ac_CSTitle"></span><span><span></span></span>
            </span>
          </label>
        </li>
        <li>
          <label class="ac_CSProduct" for="ac_CSP3">
            <input type="checkbox" id="ac_CSP3" checked="true">
            <span class="ac_CSChk"></span>
            <span class="ac_CSProductInfo">
              <span class="ac_CSTitle"></span><span><span></span></span>
            </span>
          </label>
        </li>
        <li>
          <label class="ac_CSProduct" for="ac_CSP4">
            <input type="checkbox" id="ac_CSP4" checked="true">
            <span class="ac_CSChk"></span>
            <span class="ac_CSProductInfo">
              <span class="ac_CSTitle"></span><span><span></span></span>
            </span>
          </label>
        </li>
      </ul>
    </div>
  </div>
</div>


<script>


let ac_CSProductLabels = document.querySelectorAll('.ac_CSProduct');
let ac_CSProductImages = document.querySelectorAll('.ac_CSImages > ul > li');
let prdCnt = 0, totalPrice = 0, priceTally = 0, formData = { 'items': [] };
const ac_CSdoAddToCart = function(data){
  fetch(window.Shopify.routes.root + 'cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data)
  })
  .then(response => response.json()).then(res => { /*console.log(res);*/
    var cartChangeEvent = new Event("cart:refresh");
    document.dispatchEvent(cartChangeEvent);
    document.querySelector('nav.header__secondary-nav a[href="/cart"]').click();
  }).catch(error => { console.error('An error occurred:', error); });
};
for(let cS=0;ac_CSProductLabels[cS];cS++){
  //set product handles in crossSell DOM elements
  ac_CSProductLabels[cS].setAttribute('data-handle', Object.keys(ac_CSProducts)[cS]);
  ac_CSProductImages[cS].setAttribute('data-handle', Object.keys(ac_CSProducts)[cS]);
}
//click action cross sell labels to show/hide the product images and check/uncheck the custom checkboxes
let csLabels = document.querySelectorAll('.ac_CSProducts label');
for(let l=0;csLabels[l];l++){
  csLabels[l].addEventListener('click',function(e){
    e.stopPropagation();//this function is double-firing for some reason
    e.preventDefault();//using these to prevent that, which seems to work!
    //set state to opposite state
    let csLabelChecked = (csLabels[l].querySelector('input').getAttribute('checked') == 'true') ? 'false' : 'true';
    csLabels[l].querySelector('input').setAttribute('checked',csLabelChecked);
    //show/hide associated product image
    let csImgSelector = csLabels[l].getAttribute('data-handle');
    let csImgBlock = document.querySelector('li[data-handle="'+csImgSelector+'"]');
    if(!csImgBlock.classList.contains('ac_CSDisable')) csImgBlock.classList.add('ac_CSDisable');
    else if(csImgBlock.classList.contains('ac_CSDisable')) csImgBlock.classList.remove('ac_CSDisable');
    //update the total price based on what's checked
    priceTally = 0;
    for(let k=0;csLabels[k];k++){
      if(csLabels[k].querySelector('input').getAttribute('checked') === 'true'){
        priceTally += Number(csLabels[k].getAttribute('data-variant-price'));
      }
    }
    document.querySelector('.ac_CSPricing > span:nth-child(2)').innerText = '$'+(Number(priceTally) / 100).toFixed(2);
  });
}
//get the product data for provided crossSell items
for(let cS in ac_CSProducts){
  fetch(window.Shopify.routes.root + 'products/'+cS+'.js').then(response => response.json()).then(product => {
    ac_CSProducts[cS].data = product;
    let ac_CSProductLabel = document.querySelector('.ac_CSProducts label[data-handle="'+cS+'"]');
    prdCnt++;
    if(ac_CSProductLabel){
      totalPrice += Number(ac_CSProducts[cS].data.price);
      ac_CSProductLabel.setAttribute('data-variant-price',ac_CSProducts[cS].data.price);
      ac_CSProductLabel.querySelector('span.ac_CSTitle').innerText = ac_CSProducts[cS].data.title;
      ac_CSProductLabel.querySelector('.ac_CSProductInfo > span:last-child > span:first-child').innerText = '$'+(Number(ac_CSProducts[cS].data.price) / 100).toFixed(2);
    }
    //populate crossSell product image
    document.querySelector('.ac_CSImages li[data-handle="'+cS+'"]').innerHTML = '<a href="'+ac_CSProducts[cS].data.url+'"><img src="'+ac_CSProducts[cS].data.images[0]+'"></a>';
    
    document.querySelector('.ac_CSProducts label[data-handle="'+cS+'"] > input').setAttribute('data-variant-id',ac_CSProducts[cS].data.variants[0].id);
    
    if(prdCnt==Object.keys(ac_CSProducts).length) ac_CSInit();
  }).catch(error => { console.error('An error occurred:', error); });
}
const ac_CSInit = () => {
  //populate total price now that all products have loaded
  document.querySelector('.ac_CSPricing > span:nth-child(2)').innerText = '$'+(Number(totalPrice) / 100).toFixed(2);
  //setup click listener for addtocart
  document.querySelector('.ac_CSCTA > button').addEventListener('click',function(e){
    e.stopPropagation();//this function is double-firing for some reason
    e.preventDefault();//using these to prevent that, which seems to work!
    formData = { 'items': [] };
    for(let ui=0;ac_CSProductLabels[ui];ui++){
      let crossSellChk = ac_CSProductLabels[ui].querySelector('input');
      if(crossSellChk.getAttribute('checked') === 'true') formData.items.push({'id':crossSellChk.getAttribute('data-variant-id'),'quantity':1});
    }
    ac_CSdoAddToCart(formData);
  });
};



  
</script>