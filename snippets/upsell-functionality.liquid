<script>
  
function calculateTotal() {
     
  var priceArry = [];
  $(".name_single_pro_check.is-checked input").each(function(){
      var total = 0;
      var single_Price = $(this).attr('data-price');
      priceArry.push(single_Price);
  });  
  setTimeout(function() {
   var total = 0; // variable to store the total
   $.each(priceArry, function(index, value) {
    total += parseFloat(value) || 0;
   });
  $('.total-count span.final_price').text(total.toFixed(2));
  }, 1000);
}

let element = document.querySelector('.product-page__description--title');
let element2, mainImage, activeID, currentPrice, firstPrice, firstCheck, firstDiv;

var observer = new MutationObserver(function(mutations) {
  mutations.forEach(function(mutation) {
    if (mutation.type === "attributes") {
      firstPrice = document.querySelectorAll('.single_price')[0];
      firstDiv = document.querySelector('.first-div');
      currentPrice = document.querySelector("div.product-page--price.font--accent");
      element2 = document.querySelector('.product-page--title.product-variant--title.active').textContent.trim();
      activeID = document.querySelector('.product-page--title.product-variant--title.active').dataset.variantId;
      firstCheck = document.querySelector("div.name_single_pro_wrapper > div:nth-child(1) > input");
      mainImage = document.querySelector('div[data-active="true"] > img').src;
      document.querySelectorAll('span.single_title')[0].textContent = element2;
      document.querySelectorAll('.single_image > img')[0].src = mainImage; 
      firstCheck.value = activeID;
      firstPrice.textContent = currentPrice.textContent;
      firstCheck.dataset.price = currentPrice.textContent.replace(/\$/g, '').trim();
      firstDiv.id = "product-" + activeID;
      calculateTotal();
    }
  });
});

observer.observe(element, {
  childList: true,
  attributes: true,
  subtree: true,
  attributeFilter: ['class'],
});

let activeTitle = document.querySelector('.product-page--title.active');
let currentVarID = activeTitle.dataset.variantId;
let selectOption = document.querySelector('.disclosure--toggle');

$( document ).ready(function() {
  calculateTotal();
})

$('.name_single_pro_check input, .name_single_pro_check label').click(function() {
  if(!$(this).is(':checked')){
    $(this).parent().removeClass("is-checked");
    var product_val = $(this).val();
    $("#product-"+product_val).hide();
    $("#product-"+product_val).removeClass('name_single_active');
  }
  else{
  $(this).parent().addClass("is-checked");
  var product_val = $(this).val();
  $("#product-" + product_val).show();
    $("#product-"+product_val).addClass('name_single_active');
  }
  
  calculateTotal();
 
});    

$('button#add-to-cart-button').on('click', function() {
  var variants = []; // Create an empty array to store variant data

  // Loop through each selected variant and retrieve its information
  $('.name_single_pro_check.is-checked').each(function() {
    var variantId = $(this).find('input').val(); // Get the selected variant ID
    var quantity = 1; // Replace with the desired quantity

    // Create an object to store the variant information
    var variant = {
      id: variantId,
      quantity: quantity
    };

    // Add the variant object to the variants array
    variants.push(variant);
  });

  // Send the variants data to the Shopify cart using AJAX
  $.ajax({
    type: 'POST',
    url: '/cart/add.js', // Replace with the actual Shopify cart URL
    data: {
      items: variants
    },
    dataType: 'json',
    success: function(response) {
    },
    error: function(xhr, status, error) {
      // Handle error response, if any
    }
  });
});

// this is the promise all functionality I want to incorporate

 async function doFetches(VID, itemKey) {
        const numberOfFetches = 2;
        let sellingPlan = document.querySelector("#postId").value;

        // objects for each call

        let formData = {
          'items': [{
           'id': VID,
            'selling_plan': sellingPlan,
           'quantity': 1
           }]
         };
          let updates = {
              'id': itemKey,
              'quantity': 0
          }
    
        // objects for each call

    const cartChange = await fetch('https://dosedaily.co/' + 'cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(updates)
    });
    const cartAdd = await fetch('https://dosedaily.co/' + 'cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(formData)
    });

    // array of Promises

    const promiseBatch = Promise.all([cartChange, cartAdd]);
    console.log(promiseBatch.length);

    const cartResponses = (await promiseBatch).map(async (r, index) => {
      if (index === numberOfFetches - 1) {
        window.location.reload();
      }
    })

    return cartResponses;
    // array of Promises
}




(function () {
  var selectWrappers = document.querySelectorAll('.sticky-cart-custom-wrapper .select_wrapper');
  var selectLength = selectWrappers.length;
  if (selectLength < 2) {
    var stickyCartWrapper = document.querySelector('.sticky-cart-custom-wrapper');
    stickyCartWrapper.classList.add('one_select');
  }


  
  if (window.location.href.indexOf('zip-wallet') > -1 && window.innerWidth < 500) {
    let stickyBox = document.querySelector('.product-sticky-add-cart-new');
  const sizeID = setInterval(sizeCallback, 200);
  function sizeCallback() {
    if (stickyBox) {
      clearInterval(sizeID);
      document.querySelector("variant-selector2 > div.select_wrapper.custom").style.display = "none";
    }
  }
  }
                               


  class VariantSelector2 extends HTMLElement {
      constructor(){
        super();
        this.addEventListener('change', this.onVariantChange);
      }
      onVariantChange(){
          this.getSelectedOptions();
          this.getSelectedVariant();
          if(this.currentVariant){
            this.updateURL();
            this.updateFormID();
            this.updatePrice();
          }
      }

      getSelectedOptions(){
      this.options = Array.from(this.querySelectorAll('select.select-variant-options'), select => select.value)
      //console.log("Here....")
      //console.log(this.options)
    }

    getVariantJSON(){
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent)
      return this.variantData;
    }

    getSelectedVariant(){
        this.currentVariant = this.getVariantJSON().find((variant) =>{
          const findings = !variant.options.map((option,index) => {
          return this.options[index] === option
          }).includes(false);
          if(findings) return variant;
        })

        var Variantinventory = this.currentVariant.inventory_quantity;
        var addCartButton = document.querySelector('.submit-button-custom span.add-to-cart-custom-button.btn');
        var addText = document.querySelector('.submit-button-custom span.add-to-cart-custom-button.btn span.add-text');
        
        if (Variantinventory > 0) {
          addCartButton.classList.remove('is-not-active');
          addText.textContent = 'Add To Cart ';
        } else {
          addCartButton.classList.add('is-not-active');
          addText.textContent = 'Sold Out ';
        }

    }
    updateURL(){
      if(!this.currentVariant) return
      window.history.replaceState({},'', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID(){
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice(){
      const Price_input = document.querySelector('#product-form').querySelector('.price_custom');
      Price_input.text = this.currentVariant.price;  
      var priceVal = this.currentVariant.price;
          priceVal = parseFloat(priceVal);
      var FinalPrice = priceVal / 100;
      document.getElementById("newcustomPrice").innerHTML = '$'+FinalPrice;
    
    }
  }
    customElements.define('variant-selector2', VariantSelector2);
      
    
  var sizeSwatch = document.querySelector('select.SizeSwatch');
  if (sizeSwatch) {
    sizeSwatch.addEventListener('change', function() {
      window.location = sizeSwatch.value;
    });
  }

var button = document.querySelector(".submit-button-custom span.add-to-cart-custom-button.btn");

button.addEventListener("click", function() {
let getVariant = document.querySelector('.product-sticky-add-cart-new input[name="id"]').value;
let requestBody = {
  'items': [{
    'id': getVariant,
    'quantity': 1
  }]
};

fetch('/cart/add.js', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify(requestBody)
}).then(response => {
  return response.json();
}).then(data => {
  var cartIconBubbleMobile = document.querySelector('a#cart-icon-bubble-mobile');
  cartIconBubbleMobile.setAttribute('href', '#');
  
  fetch(location.href)
  .then(response => response.text())
  .then(html => {
    const parser = new DOMParser();
    const doc = parser.parseFromString(html, 'text/html');
    const newContent = doc.querySelector('#CartDrawer');
    const currentCartDrawer = document.querySelector('#CartDrawer');
    currentCartDrawer.innerHTML = newContent.innerHTML;
  })
  .catch(error => {
    console.error('Error:', error);
  });
      
  
 setTimeout(function(){
    document.querySelector('a#cart-icon-bubble').click();
  },1200);
  const cartDrawer = document.querySelector('.cart-drawer');
cartDrawer.classList.remove('is-empty');
     
  
}).catch((error) => {
  console.error('Error:', error);
});
});

  var topSubmitButton = document.querySelector(".top-submit-button-custom span.top-submit-button.btn[data-click='true']");

if (topSubmitButton) {
  topSubmitButton.addEventListener("click", function() {
    window.scrollTo({top: 0, behavior: 'smooth'});
  });
}

  window.addEventListener("scroll", function() {
    if (window.scrollY > 800) {
      var productStickyAddCart = document.querySelector('div.product-sticky-add-cart-new');
      if (productStickyAddCart) {
        productStickyAddCart.classList.add('sticky_active');
      }
    } else {
      var productStickyAddCart = document.querySelector('div.product-sticky-add-cart-new');
      if (productStickyAddCart) {
        productStickyAddCart.classList.remove('sticky_active');
      }
    }
  });

  document.addEventListener('click', function() {
    setTimeout(function() {
      var splitPrice = document.querySelector('.split_price').textContent;
      var productPrice = document.querySelectorAll('.top-submit-button-custom .ProductMeta__Price.Price');
      
      productPrice.forEach(function(priceElement) {
        priceElement.textContent = splitPrice;
        priceElement.setAttribute('data-currency-usd', splitPrice);
      });
    }, 1500);
  });
})();

  
</script>